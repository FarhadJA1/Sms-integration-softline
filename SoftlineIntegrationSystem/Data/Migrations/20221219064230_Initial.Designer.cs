// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftlineIntegrationSystem.Data;

#nullable disable

namespace SoftlineIntegrationSystem.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221219064230_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SoftlineIntegrationSystem.Identity.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ramin@example.com",
                            FirstName = "Ramin",
                            IsAdmin = true,
                            LastName = "Guliyev",
                            PasswordHash = new byte[] { 243, 144, 186, 154, 1, 123, 57, 177, 113, 216, 215, 162, 146, 20, 170, 237, 212, 110, 132, 81, 96, 142, 104, 249, 189, 232, 80, 166, 244, 124, 60, 250, 75, 90, 234, 186, 91, 110, 182, 10, 210, 41, 175, 37, 71, 95, 129, 127, 236, 85, 149, 103, 227, 242, 58, 164, 69, 12, 196, 31, 116, 245, 229, 35 },
                            PasswordSalt = new byte[] { 57, 53, 115, 220, 103, 224, 84, 68, 31, 238, 238, 5, 184, 49, 69, 169, 110, 80, 121, 128, 169, 189, 203, 238, 127, 24, 220, 104, 81, 43, 84, 169, 208, 163, 149, 9, 207, 123, 10, 26, 195, 109, 109, 67, 183, 204, 37, 146, 21, 5, 112, 121, 85, 5, 181, 51, 227, 187, 25, 116, 23, 33, 169, 21, 210, 235, 92, 203, 24, 129, 122, 155, 77, 216, 162, 63, 51, 173, 73, 68, 138, 95, 30, 182, 45, 71, 157, 1, 66, 211, 67, 220, 123, 127, 129, 166, 227, 240, 220, 116, 199, 55, 116, 21, 203, 156, 255, 141, 204, 29, 143, 133, 146, 210, 34, 92, 218, 93, 205, 100, 109, 58, 150, 6, 82, 187, 175, 7 }
                        });
                });

            modelBuilder.Entity("SoftlineIntegrationSystem.Models.Entities.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNotified")
                        .HasColumnType("bit");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("SoftlineIntegrationSystem.Models.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("More")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SoftlineIntegrationSystem.Models.Entities.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("SoftlineIntegrationSystem.Models.Entities.Venue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apikey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HookPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IIKOApikey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifiedPersonPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("SoftlineIntegrationSystem.Models.Entities.Venue", b =>
                {
                    b.HasOne("SoftlineIntegrationSystem.Models.Entities.Restaurant", "Restaurant")
                        .WithMany("Venues")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("SoftlineIntegrationSystem.Models.Entities.Restaurant", b =>
                {
                    b.Navigation("Venues");
                });
#pragma warning restore 612, 618
        }
    }
}
